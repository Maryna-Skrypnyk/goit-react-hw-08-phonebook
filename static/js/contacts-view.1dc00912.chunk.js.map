{"version":3,"sources":["components/Button/Button.module.scss","components/PageHeading/PageHeading.js","components/Button/Button.js","components/ContactForm/ContactForm.module.scss","components/IconButton/IconButton.module.scss","components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","views/ContactsView/ContactsView.module.scss","components/ContactForm/ContactForm.js","components/IconButton/IconButton.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView/ContactsView.js"],"names":["module","exports","PageHeading","text","defaultProps","Button","onLoadMore","contentBtn","disabled","onClick","className","styles","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","contactsSelectors","getVisibleContactsSortByName","dispatch","useDispatch","nameInputId","shortid","generate","numberInputId","handleChange","e","target","value","reset","onSubmit","preventDefault","find","contact","toast","warn","trim","contactsOperations","addContact","Form","htmlFor","Label","LabelText","id","type","onChange","placeholder","pattern","title","maxLength","Input","IconButton","children","onDeleteContact","allyProps","ContactItem","Contact","ContactName","width","height","ContactList","isLoading","getLoading","useEffect","fetchContacts","LoaderSpinner","length","map","deleteContact","Filter","getFilter","event","changeFilter","required","ContactsView","Title"],"mappings":"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","file":"static/js/contacts-view.1dc00912.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Bnys\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function PageHeading({ text }) {\n  return <h1>{text}</h1>;\n}\n\nPageHeading.defaultProps = {\n  text: '',\n};\n\nPageHeading.propTypes = {\n  text: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Button.module.scss';\n\nconst Button = ({ onLoadMore, contentBtn, disabled }) => (\n  <button disabled={disabled} onClick={onLoadMore} className={styles.Button}>\n    {contentBtn}\n  </button>\n);\n\nButton.defaultProps = {\n  onLoadMore: () => null,\n  disabled: false,\n};\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func,\n  contentBtn: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__3vOOx\",\"Label\":\"ContactForm_Label__15VIs\",\"LabelText\":\"ContactForm_LabelText__3cUNw\",\"Input\":\"ContactForm_Input__1R0Vn\",\"Button\":\"ContactForm_Button__3H-0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconButton\":\"IconButton_IconButton__1UfE0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__2Tlo6\",\"ContactItem\":\"ContactList_ContactItem__2TFkH\",\"Contact\":\"ContactList_Contact__Ue451\",\"ContactName\":\"ContactList_ContactName__2mM75\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__2x4pi\",\"LabelText\":\"Filter_LabelText__RhCcx\",\"Input\":\"Filter_Input__2R1i0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"ContactsView_Title__2tbbu\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\nimport Button from '../Button';\nimport { toast } from 'react-toastify';\n\nimport shortid from 'shortid';\n\nimport styles from './ContactForm.module.scss';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(contactsSelectors.getVisibleContactsSortByName);\n  const dispatch = useDispatch();\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.find(contact => contact.name === e.target.name.value)) {\n      toast.warn(`${e.target.name.value} is already in contacts`);\n      return;\n    }\n\n    if (contacts.find(contact => contact.number === e.target.number.value)) {\n      toast.warn(`Number ${e.target.number.value} is already in contacts`);\n      return;\n    }\n\n    if (\n      (!name || e.target.name.value.trim() === '') &&\n      (!number || e.target.number.value.trim() === '')\n    ) {\n      toast.warn(`Fill in the fields \"Name\" and \"Number\"`);\n      return;\n    }\n\n    if (!name || e.target.name.value.trim() === '') {\n      toast.warn(`Field \"Name\" is empty`);\n      return;\n    }\n\n    if (!number || e.target.number.value.trim() === '') {\n      toast.warn(`Field \"Number\" is empty`);\n      return;\n    }\n\n    dispatch(contactsOperations.addContact(name, number));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.Form}>\n      <label htmlFor={nameInputId} className={styles.Label}>\n        <span className={styles.LabelText}>Name</span>\n        <input\n          id={nameInputId}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          // required\n          maxLength=\"40\"\n          className={styles.Input}\n        />\n      </label>\n\n      <label htmlFor={numberInputId} className={styles.Label}>\n        <span className={styles.LabelText}>Number</span>\n        <input\n          id={numberInputId}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"Enter number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          // required\n          maxLength=\"18\"\n          className={styles.Input}\n        />\n      </label>\n\n      {/* <button type=\"submit\" className={styles.Button}>\n        Add contact\n      </button> */}\n\n      <Button type=\"submit\" contentBtn=\"Add contact\" />\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './IconButton.module.scss';\n\nconst IconButton = ({ children, onDeleteContact, ...allyProps }) => (\n  <button\n    type=\"button\"\n    className={styles.IconButton}\n    onClick={onDeleteContact}\n    {...allyProps}\n  >\n    {children}\n  </button>\n);\n\nIconButton.defaultProps = {\n  onDeleteContact: () => null,\n  children: null,\n};\n\nIconButton.propTypes = {\n  onDeleteContact: PropTypes.func,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string.isRequired,\n};\n\nexport default IconButton;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport PropTypes from 'prop-types';\n\nimport IconButton from '../IconButton';\nimport LoaderSpinner from '../LoaderSpinner';\n// import { ReactComponent as IconDelete } from '../icons/icon-close-delete.svg';\nimport { HiOutlineTrash } from 'react-icons/hi';\n\nimport styles from './ContactList.module.scss';\n\nconst ContactItem = ({ name, number, onDeleteContact }) => {\n  return (\n    <li className={styles.ContactItem}>\n      <p className={styles.Contact}>\n        <span className={styles.ContactName}>{name}:</span> {number}\n      </p>\n      <IconButton onDeleteContact={onDeleteContact} aria-label=\"Delete contact\">\n        <HiOutlineTrash width={15} height={15} />\n      </IconButton>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst ContactList = () => {\n  const contacts = useSelector(contactsSelectors.getVisibleContactsSortByName);\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\n\n  // if (contacts.length === 0) {\n  //   return <p>There are no contacts in the list</p>;\n  // }\n\n  return (\n    <>\n      {isLoading && <LoaderSpinner />}\n      {contacts.length === 0 && <p>There are no contacts in the list</p>}\n      <ul className={styles.ContactList}>\n        {contacts.map(({ id, name, number }) => (\n          <ContactItem\n            key={id}\n            name={name}\n            number={number}\n            onDeleteContact={() => onDeleteContact(id)}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/contacts-actions';\nimport { contactsSelectors } from 'redux/contacts';\n\nimport styles from './Filter.module.scss';\n\nconst Filter = () => {\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={styles.Label}>\n      <span className={styles.LabelText}>Find contacts by name</span>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={value}\n        onChange={event => dispatch(changeFilter(event.target.value))}\n        placeholder=\"Enter name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        className={styles.Input}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import PageHeading from 'components/PageHeading';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n\nimport styles from './ContactsView.module.scss';\n\nexport default function ContactsView() {\n  return (\n    <>\n      <PageHeading text=\"Phonebook\" />\n      <ContactForm />\n      <h2 className={styles.Title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"sourceRoot":""}