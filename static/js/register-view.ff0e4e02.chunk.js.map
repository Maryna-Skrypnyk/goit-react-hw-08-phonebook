{"version":3,"sources":["components/Button/Button.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/PageHeading/PageHeading.js","components/Button/Button.js","views/RegisterView/RegisterView.module.scss","views/RegisterView/RegisterView.js"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","PageHeading","text","defaultProps","Button","onLoadMore","contentBtn","disabled","onClick","className","styles","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","isLoading","useSelector","authSelectors","getLoading","handleChange","target","onSubmit","e","preventDefault","trim","toast","warn","authOperations","register","Form","autoComplete","Label","LabelText","type","onChange","placeholder","Input","LoaderSpinner"],"mappings":"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","file":"static/js/register-view.ff0e4e02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Bnys\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function PageHeading({ text }) {\n  return <h1>{text}</h1>;\n}\n\nPageHeading.defaultProps = {\n  text: '',\n};\n\nPageHeading.propTypes = {\n  text: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Button.module.scss';\n\nconst Button = ({ onLoadMore, contentBtn, disabled }) => (\n  <button disabled={disabled} onClick={onLoadMore} className={styles.Button}>\n    {contentBtn}\n  </button>\n);\n\nButton.defaultProps = {\n  onLoadMore: () => null,\n  disabled: false,\n};\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func,\n  contentBtn: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"RegisterView_Form__218Au\",\"Label\":\"RegisterView_Label__1IPt7\",\"LabelText\":\"RegisterView_LabelText__2nCc3\",\"Input\":\"RegisterView_Input__2Ddyb\",\"Button\":\"RegisterView_Button__3Ui1u\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authOperations, authSelectors } from 'redux/auth';\n\nimport PageHeading from 'components/PageHeading';\nimport Button from 'components/Button';\nimport LoaderSpinner from 'components/LoaderSpinner';\nimport { toast } from 'react-toastify';\n\nimport styles from './RegisterView.module.scss';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const isLoading = useSelector(authSelectors.getLoading);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (\n      (!name || e.target.name.value.trim() === '') &&\n      (!email || e.target.email.value.trim() === '') &&\n      (!password || e.target.password.trim() === '')\n    ) {\n      toast.warn('Fill in the fields \"Name\", \"Email\" and \"Password\"');\n      return;\n    }\n\n    if (!name || e.target.name.value.trim() === '') {\n      toast.warn('Field \"Name\" is empty');\n      return;\n    }\n\n    if (!email || e.target.email.value.trim() === '') {\n      toast.warn('Field \"Email\" is empty');\n      return;\n    }\n\n    if (!password || e.target.password.value.trim() === '') {\n      toast.warn('Enter your password');\n      return;\n    }\n\n    if (password.length < 8 || e.target.password.value.length < 8) {\n      toast.warn('Enter a password of 8 characters');\n      return;\n    }\n\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <PageHeading text=\"Registration page\" />\n\n      <form onSubmit={handleSubmit} className={styles.Form} autoComplete=\"off\">\n        <label className={styles.Label}>\n          <span className={styles.LabelText}>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            placeholder=\"Enter name\"\n            className={styles.Input}\n          />\n        </label>\n\n        <label className={styles.Label}>\n          <span className={styles.LabelText}>Email</span>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            placeholder=\"Enter email\"\n            className={styles.Input}\n          />\n        </label>\n\n        <label className={styles.Label}>\n          <span className={styles.LabelText}>Password</span>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            placeholder=\"Enter password\"\n            className={styles.Input}\n          />\n        </label>\n\n        <Button type=\"submit\" contentBtn=\"Sign up\" />\n\n        {isLoading && <LoaderSpinner />}\n      </form>\n    </div>\n  );\n}\n"],"sourceRoot":""}